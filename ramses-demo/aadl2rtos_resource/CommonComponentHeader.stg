import "Common.stg"


////////////////////////////////////////////////////////////////////////////
//
// CamkesComponentHeader.stg
//
// component gluecode header files for CAmkES
//
////////////////////////////////////////////////////////////////////////////

componentGlueCodeHeaderPurpose() ::= <<
This header section contains the AADL gluecode interfaces used by the
client for the thread implementations.
>>

componentGlueCodeHeaderIfdef(sysInstanceName) ::= "__SMACCM_<sysInstanceName>_types__H"


filePrefix(name, date, path, datatypesHeader) ::= <<
#ifndef <componentGlueCodeHeaderIfdef(name)>
#define <componentGlueCodeHeaderIfdef(name)>

#include "<datatypesHeader>"

<DARPALicenseComment()>
<filenameBlockComment(date, path, componentGlueCodeHeaderPurpose())>


>>

writeExternalHandlerUdePrototype(externalHandler, dispatcher) ::= <%
<if(dispatcher.hasData)>
void <externalHandler.handlerName>(const <dispatcher.type.aadlInputType.name> <dispatcher.name>);
<else>
void <externalHandler.handlerName>(void);
<endif>
%>

writeUdePrototype(dispatcher) ::= <<
<dispatcher.externalHandlers:writeExternalHandlerUdePrototype(dispatcher)>
<if(dispatcher.isIRQ)>void <dispatcher.firstLevelInterruptHandler>(void);<endif>
>>

writePortWriterPrototype(port) ::= <<
bool <port.aadlWriterFnName>(<if(port.hasData)>const <port.type.aadlInputType.name> <port.name><else>void<endif>);

>>

writePortReaderPrototype(port) ::= <<
bool <port.aadlReaderFnName>(<if(port.hasData)><port.type.aadlOutputType.name> <port.name><else>void<endif>);

>>


portInitializer(port) ::= <%
<if(port.hasInitializeEntrypoint)>
void <port.initializeEntrypointOpt.handlerName>(void);
<endif>
%>

componentGlueCodeHeaderBodyFunctions(threadImpl) ::= <<

// These are functions that are expected to be provided by the user.
<threadImpl.dispatchers:writeUdePrototype()>
<threadImpl.portList:portInitializer()>

// These are functions that are provided by the AADL middleware for
// communication with other threads
<threadImpl.outputPortList:writePortWriterPrototype()>
<threadImpl.inputPortList:writePortReaderPrototype()>
<if(threadImpl.isExternal)>
//////////////////////////////////////////////////////////////////////////
//
// Note: thread is declared EXTERNAL; user should provide run() function.
//
//////////////////////////////////////////////////////////////////////////
<endif>
>>

componentGlueCodeHeaderBody(threadImpl) ::= <<
<componentGlueCodeHeaderBodyFunctions(threadImpl)>
>>

filePostfix(name, path) ::= <<
#endif // <componentGlueCodeHeaderIfdef(name)>
>>

cStmt(stmt) ::= "<stmt>;"
